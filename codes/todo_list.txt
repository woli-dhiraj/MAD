import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
      ),
      home: const TodoApp(),
    );
  }
}

class TodoApp extends StatefulWidget {
  const TodoApp({super.key});

  @override
  State<TodoApp> createState() => _TodoAppState();
}

class _TodoAppState extends State<TodoApp> {
  List<Map<String, dynamic>> todos = [];
  final todoController = TextEditingController();

  @override
  void dispose() {
    todoController.dispose();
    super.dispose();
  }

  void showBottomDialog() {
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: const Text("Add Todo"),
          content: TextFormField(
            controller: todoController,
            decoration: const InputDecoration(
              border: OutlineInputBorder(),
              hintText: "Title",
              labelText: "Title",
            ),
          ),
          actions: [
            TextButton(
              onPressed: () {
                Navigator.pop(context);
              },
              child: const Text("Cancel"),
            ),
            ElevatedButton(
              onPressed: () {
                addTodo();
              },
              child: const Text("Add"),
            ),
          ],
        );
      },
    );
  }

  void addTodo() {
    final todoText = todoController.text.trim();
    if (todoText.isNotEmpty) {
      setState(() {
        todos.add({"title": todoText, "completed": false});
      });
      todoController.clear();
      Navigator.pop(context); 
    }
  }

  void updateTodo(int id) {
    setState(() {
      todos[id]["completed"] = !todos[id]["completed"];
    });
  }

  void deleteTodo(int id) {
    setState(() {
      todos.removeAt(id);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Todo App")),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: ListView.builder(
          itemCount: todos.length,
          itemBuilder: (context, index) {
            final todo = todos[index];
            return Card(
              child: ListTile(
                leading: IconButton(
                  icon: Icon(
                    todo["completed"]
                        ? Icons.radio_button_checked
                        : Icons.radio_button_unchecked,
                    color: todo["completed"] ? Colors.green : Colors.grey,
                  ),
                  onPressed: () => updateTodo(index),
                ),
                title: Text(
                  todo["title"],
                  style: TextStyle(
                    decoration: todo["completed"]
                        ? TextDecoration.lineThrough
                        : TextDecoration.none,
                  ),
                ),
                trailing: IconButton(
                  icon: const Icon(Icons.delete, color: Colors.red),
                  onPressed: () => deleteTodo(index),
                ),
              ),
            );
          },
        ),
      ),
      floatingActionButton: FloatingActionButton(
        onPressed: showBottomDialog,
        child: const Icon(Icons.add),
      ),
    );
  }
}
